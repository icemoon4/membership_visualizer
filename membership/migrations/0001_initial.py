# Generated by Django 3.2.6 on 2024-11-15 00:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('committee_name', models.CharField(max_length=255, unique=True)),
                ('agenda_link', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('defunct', 'Defunct')], default='active', max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=255)),
                ('event_date', models.DateField()),
                ('committee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='membership.committee')),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('do_not_call', models.BooleanField(default=False)),
                ('p2ptext_optout', models.BooleanField(default=False)),
                ('best_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('mobile_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('home_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('work_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('join_date', models.DateField()),
                ('xdate', models.DateField()),
                ('membership_type', models.CharField(blank=True, choices=[('one-time', 'One-time'), ('yearly', 'Yearly'), ('monthly', 'Monthly'), ('income-based', 'Income-based')], max_length=255)),
                ('monthly_dues_status', models.CharField(blank=True, choices=[('never', 'Never'), ('active', 'Active'), ('manual', 'Manual'), ('canceled_by_failure', 'Canceled by Failure'), ('canceled_by_admin', 'Canceled by Admin'), ('canceled_by_processor', 'Canceled by Processor')], max_length=255)),
                ('yearly_dues_status', models.CharField(blank=True, choices=[('never', 'Never'), ('active', 'Active'), ('manual', 'Manual'), ('canceled_by_failure', 'Canceled by Failure'), ('canceled_by_admin', 'Canceled by Admin'), ('canceled_by_processor', 'Canceled by Processor')], max_length=255)),
                ('membership_status', models.CharField(blank=True, choices=[('Lapsed', 'Lapsed'), ('Member', 'Member'), ('Member in Good Standing', 'Member in Good Standing')], max_length=255)),
                ('memb_status_letter', models.CharField(blank=True, choices=[('L', 'L'), ('M', 'M')], max_length=2)),
                ('union_member', models.CharField(blank=True, choices=[('Yes, current union member', 'Yes, current union member'), ('No, not a union member', 'No, not a union member')], max_length=255, null=True)),
                ('union_name', models.CharField(blank=True, max_length=255, null=True)),
                ('union_local', models.CharField(blank=True, max_length=255, null=True)),
                ('accommodations', models.TextField(blank=True, null=True)),
                ('student_yes_no', models.CharField(blank=True, choices=[('Yes, college student', 'Yes, college student'), ('Yes, graduate student', 'Yes, graduate student'), ('Yes, high school student', 'Yes, high school student'), ('No', 'No')], max_length=255, null=True)),
                ('student_school_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_pref', models.CharField(choices=[('Yes', 'Yes'), ('Membership card only', 'Membership card only'), ('No', 'No')], max_length=255)),
                ('address1', models.CharField(max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(default='MA', max_length=2)),
                ('zip', models.CharField(max_length=10)),
                ('country', models.CharField(default='United States', max_length=50)),
                ('actionkit_id', models.IntegerField(primary_key=True, serialize=False)),
                ('dsa_chapter', models.CharField(default='Worcester', max_length=50)),
                ('ydsa_chapter', models.CharField(blank=True, max_length=255, null=True)),
                ('new_member_past_month', models.BooleanField(default=False)),
                ('list_date', models.DateField()),
                ('discord_name', models.CharField(blank=True, max_length=255, null=True)),
                ('discord_status', models.CharField(blank=True, choices=[('Member', 'Member'), ('Member in Good Standing', 'Member in Good Standing'), ('Visiting Member', 'Visiting Member')], max_length=255, null=True)),
                ('vaccinated', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('do_not_text', models.BooleanField(default=False)),
                ('do_not_email', models.BooleanField(default=False)),
                ('in_chapter', models.BooleanField(default=True)),
                ('committee', models.ManyToManyField(blank=True, to='membership.Committee')),
                ('race', models.ManyToManyField(blank=True, to='membership.Race')),
                ('region', models.ManyToManyField(blank=True, to='membership.Region')),
            ],
        ),
        migrations.CreateModel(
            name='EventAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('attended_in_person', 'Attended, In-Person'), ('attended_virtual', 'Attended, Virtual'), ('walk_in_in_person', 'Walk In, In-Person'), ('drop_in_virtual', 'Drop In, Virtual'), ('canceled', 'Canceled'), ('no_show', 'No Show')], max_length=100, null=True)),
                ('rsvp_status', models.CharField(blank=True, choices=[('asked', 'Asked'), ('maybe', 'Maybe'), ('scheduled_in_person', 'Scheduled, In-Person'), ('scheduled_virtual', 'Scheduled, Virtual'), ('scheduled', 'Scheduled'), ('unavailable', 'Unavailable')], max_length=100, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='membership.event')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='membership.member')),
            ],
        ),
        migrations.AddField(
            model_name='committee',
            name='coordinator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='coordinating_committee', to='membership.member'),
        ),
        migrations.AddField(
            model_name='committee',
            name='facilitator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='facilitating_committee', to='membership.member'),
        ),
    ]
